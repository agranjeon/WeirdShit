{"version":3,"sources":["Recipe.js","CheckBox.js","RecipeForm.js","RecipesList.js","index.js"],"names":["Recipe","body","this","props","recipe","ingredients","link","informations","class","title","dangerouslySetInnerHTML","__html","onClick","editRecipe","deleteRecipe","React","Component","Checkbox","id","placeholder","style","classNames","type","checked","name","value","onChange","RecipeForm","handleChange","event","setState","target","handleKeyPress","key","onSubmit","state","editedRecipe","dinner","noon","isOpen","htmlFor","onKeyPress","RecipesList","submitRecipe","formOpen","uuid","recipes","push","saveStateToLocalStorage","editedIndex","find","r","index","openForm","formKey","localStorage","setItem","JSON","stringify","splice","highlightRandomShit","typeRecipes","_","filter","length","randomShit","sample","parse","getItem","undefined","size","background","alignment","close","wrap","map","i","highlightedShit","ReactDOM","render","position","document","getElementById"],"mappings":"mNAGqBA,E,4JACnB,WAAU,IAAD,OACHC,EAAO,kCAAoCC,KAAKC,MAAMC,OAAOC,YAAc,SAK/E,OAJIH,KAAKC,MAAMC,OAAOE,OACpBL,GAAQ,YAAcC,KAAKC,MAAMC,OAAOE,KAAO,8BAEjDL,GAAQ,QAAUC,KAAKC,MAAMC,OAAOG,aAAe,SAEjD,eAAC,IAAD,CAAMC,MAAM,SAAZ,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UAAYN,KAAKC,MAAMC,OAAOK,UAEhC,cAAC,IAAD,UACE,qBAAKC,wBAAyB,CAACC,OAAQV,OAIzC,eAAC,IAAD,WACE,cAAC,IAAD,CAAQW,QAAS,kBAAM,EAAKT,MAAMU,cAAcL,MAAM,YAAtD,sBACA,cAAC,IAAD,CAAQI,QAAS,kBAAM,EAAKT,MAAMW,gBAAgBN,MAAM,YAAxD,iC,GAnB0BO,IAAMC,WCD5BC,EAAd,4JACE,WACE,OACE,uBACEC,GAAIhB,KAAKC,MAAMe,GACfC,YAAajB,KAAKC,MAAMgB,YAAcjB,KAAKC,MAAMgB,YAAc,KAC/DC,MAAOlB,KAAKC,MAAMiB,MAAQlB,KAAKC,MAAMiB,MAAQ,KAC7CC,WAAW,cACXC,KAAK,WACLC,QAASrB,KAAKC,MAAMoB,QACpBC,KAAMtB,KAAKC,MAAMqB,KAAOtB,KAAKC,MAAMqB,KAAO,KAC1CC,MAAOvB,KAAKC,MAAMsB,MAClBC,SAAUxB,KAAKC,MAAMuB,eAZ7B,GAA+BX,IAAMC,WCEhBW,E,kDACnB,WAAaxB,GAAQ,IAAD,6BAClB,cAAMA,IAeRyB,aAAe,SAACC,GACd,EAAKC,SAAL,eAAgBD,EAAME,OAAOP,KAAOK,EAAME,OAAON,SAjB/B,EAoBpBO,eAAiB,SAACH,GACE,UAAdA,EAAMI,KACR,EAAK9B,MAAM+B,SAAS,EAAKC,QAnB3B,IAAIC,EAAe,EAAKjC,MAAMiC,aAHZ,OAKlB,EAAKD,MAAQ,CACXjB,GAAIkB,EAAeA,EAAalB,GAAK,GACrCT,MAAO2B,EAAeA,EAAa3B,MAAQ,GAC3CF,aAAc6B,GAAY,UAAGA,EAAa7B,oBAAhB,QAAqC,GAC/DD,KAAM8B,GAAY,UAAGA,EAAa9B,YAAhB,QAA6B,GAC/CD,YAAa+B,GAAY,UAAGA,EAAa/B,mBAAhB,QAAoC,GAC7DgC,SAAQD,KAAgBA,EAAaC,OACrCC,OAAMF,KAAgBA,EAAaE,MAZnB,E,0CA0BpB,WAAU,IAAD,OACP,OAA0B,IAAtBpC,KAAKC,MAAMoC,OAEX,qBAAK/B,MAAM,YAAX,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,wBAEF,cAAC,IAAD,UACE,eAAC,IAAD,WACE,uBAAOc,KAAK,SAASE,KAAK,KAAKC,MAAOvB,KAAKiC,MAAMjB,KACjD,cAAC,IAAD,CAAWsB,QAAQ,QAAnB,+BACA,cAAC,IAAD,CAAOtB,GAAG,QAAQM,KAAK,QAAQE,SAAUxB,KAAK0B,aAAcH,MAAOvB,KAAKiC,MAAM1B,MAAOgC,WAAYvC,KAAK8B,iBACtG,cAAC,IAAD,CAAWQ,QAAQ,eAAnB,0BACA,cAAC,IAAD,CAAOtB,GAAG,eAAeM,KAAK,eAAeE,SAAUxB,KAAK0B,aAAcH,MAAOvB,KAAKiC,MAAM5B,aAAckC,WAAYvC,KAAK8B,iBAC3H,cAAC,IAAD,CAAWQ,QAAQ,OAAnB,kBACA,cAAC,IAAD,CAAOtB,GAAG,OAAOM,KAAK,OAAOE,SAAUxB,KAAK0B,aAAcH,MAAOvB,KAAKiC,MAAM7B,KAAMmC,WAAYvC,KAAK8B,iBACnG,cAAC,IAAD,CAAWQ,QAAQ,cAAnB,yBACA,cAAC,IAAD,CAAUtB,GAAG,cAAcM,KAAK,cAAcE,SAAUxB,KAAK0B,aAAca,WAAYvC,KAAK8B,eAA5F,SAA6G9B,KAAKiC,MAAM9B,cACxH,cAAC,IAAD,CAAWmC,QAAQ,OAAnB,kBACA,cAAC,EAAD,CAAUtB,GAAG,OAAOM,KAAK,OAAOC,MAAM,IAAIF,QAASrB,KAAKiC,MAAMG,KAAMZ,SAAUxB,KAAK0B,eACnF,cAAC,IAAD,CAAWY,QAAQ,SAAnB,oBACA,cAAC,EAAD,CAAUtB,GAAG,SAASM,KAAK,SAASC,MAAM,IAAIF,QAASrB,KAAKiC,MAAME,OAAQX,SAAUxB,KAAK0B,eACzF,cAAC,IAAD,CAAQhB,QAAS,kBAAM,EAAKT,MAAM+B,SAAS,EAAKC,QAAhD,mCAQL,O,GA1D6BpB,IAAMC,W,iCCOzB0B,E,kDACnB,WAAYvC,GAAQ,IAAD,uBACjB,cAAMA,IAcRwC,aAAe,SAACvC,GAEd,GADA,EAAK0B,SAAS,CAACc,UAAU,EAAOR,aAAc,QACzChC,EAAOc,GAAI,CACdd,EAAOc,GAAK2B,MACZ,IAAIC,EAAU,EAAKX,MAAMW,QAIzB,OAHAA,EAAQC,KAAK3C,QACb,EAAK0B,SAAS,CAACgB,QAASA,GAAU,EAAKE,yBAKzC,IAAIC,EAAc,EAClB,EAAKd,MAAMW,QAAQI,MAAK,SAACC,EAAGC,GAExB,OADAH,EAAcG,EACPD,EAAEjC,KAAOd,EAAOc,MAI3B,IAAI4B,EAAU,EAAKX,MAAMW,QACzBA,EAAQG,GAAe7C,EACvB,EAAK0B,SAAS,CAACgB,QAASA,GAAU,EAAKE,0BAnCtB,EAsCnBK,SAAW,WACT,EAAKvB,SAAS,CAACc,UAAU,EAAMU,QAAST,SAvCvB,EA0CnBhC,WAAa,SAACT,GACZ,EAAK0B,SAAS,CAACc,UAAU,EAAMU,QAAST,MAAQT,aAAchC,KA3C7C,EA8CnB4C,wBAA0B,WACxBO,aAAaC,QAAQ,UAAWC,KAAKC,UAAU,EAAKvB,MAAMW,WA/CzC,EAkDnBhC,aAAe,SAACV,GACd,IAAI6C,EACJ,EAAKd,MAAMW,QAAQI,MAAK,SAACC,EAAGC,GAExB,OADAH,EAAcG,EACPD,EAAEjC,KAAOd,EAAOc,MAI3B,IAAI4B,EAAU,EAAKX,MAAMW,QACzBA,EAAQa,OAAOV,EAAa,GAC5B,EAAKnB,SAAS,CAACgB,QAASA,GAAU,EAAKE,0BA5DtB,EA+DnBY,oBAAsB,SAACtC,GACrB,IAAIuC,EAAcC,IAAEC,OAAO,EAAK5B,MAAMW,QAApB,eAA+BxB,EAAO,MAExD,GAAIuC,EAAYG,OAAQ,CACtB,IAAIC,EAAaH,IAAEI,OAAOL,GAE1B,EAAK/B,SAAS,CAACmC,WAAYA,MAnE7B,IAAInB,EAAUW,KAAKU,MAAMZ,aAAaa,QAAQ,YAF7B,OAGZtB,IACHA,EAAU,IAEZ,EAAKX,MAAQ,CACTW,QAASA,EACTF,UAAU,EACVU,QAAST,MACTT,kBAAciC,EACdJ,gBAAYI,GAXC,E,0CAyEnB,WAAU,IAAD,OACP,OACE,cAAC,IAAD,CAAWC,KAAK,SAASC,WAAW,QAApC,SACE,sBAAK/D,MAAM,MAAX,UACE,eAAC,IAAD,CAAMgE,UAAU,SAAhB,UACE,cAAC,IAAD,CAAQ5D,QAAS,kBAAM,EAAKgD,oBAAoB,SAAhD,yBACA,cAAC,IAAD,CAAQhD,QAAS,kBAAM,EAAKgD,oBAAoB,WAAhD,2BACA,cAAC,IAAD,CAAQhD,QAAS,kBAAM,EAAKyC,YAA5B,oCAEF,eAAC,IAAD,CAAMmB,UAAU,SAAhB,UACGtE,KAAKiC,MAAM8B,YACV,qBAAKzD,MAAM,cAAX,SACE,cAAC,EAAD,CAAQJ,OAAQF,KAAKiC,MAAM8B,WAAYpD,WAAY,kBAAM,EAAKA,WAAW,EAAKsB,MAAM8B,aAAanD,aAAc,kBAAM,EAAKA,aAAa,EAAKqB,MAAM8B,iBAGtJ,cAAC,EAAD,CAAYQ,MAAO,kBAAM,EAAK3C,SAAS,CAACc,UAAU,KAAkCL,OAAQrC,KAAKiC,MAAMS,SAAUR,aAAclC,KAAKiC,MAAMC,aAAcF,SAAUhC,KAAKyC,cAAvGzC,KAAKiC,MAAMmB,YAG7E,qBAAK9C,MAAM,UAAX,SACE,cAAC,IAAD,CAAMkE,KAAK,OAAX,SACGxE,KAAKiC,MAAMW,QAAQ6B,KAAI,SAACvE,EAAQwE,GAC/B,OAAQ,cAAC,EAAD,CAAQxE,OAAQA,EAAgByE,gBAAiB,EAAK1C,MAAM0C,gBAAiBhE,WAAY,kBAAM,EAAKA,WAAWT,IAASU,aAAc,kBAAM,EAAKA,aAAaV,KAAjIwE,mB,GA/FZ7D,IAAMC,W,YCJ/C8D,IAASC,OACL,cAAC,IAAD,CAASC,SAAS,WAAlB,SACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.197c2c66.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Button, Card, CardBody, CardFooter, CardHeader, CardTitle} from 'uikit-react'\r\n\r\nexport default class Recipe extends React.Component {\r\n  render() {\r\n    let body = '<div class=\"display-linebreak\">' + this.props.recipe.ingredients + '</div>'\r\n    if (this.props.recipe.link) {\r\n      body += '<a href=\"' + this.props.recipe.link + '\" target=\"_blank\">Link</a>';\r\n    }\r\n    body += '<div>' + this.props.recipe.informations + '</div>';\r\n    return (\r\n      <Card class=\"recipe\">\r\n        <CardHeader>\r\n          <CardTitle>{this.props.recipe.title}</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div dangerouslySetInnerHTML={{__html: body}}>\r\n\r\n          </div>\r\n        </CardBody>\r\n        <CardFooter>\r\n          <Button onClick={() => this.props.editRecipe()} class=\"uk-margin\">Modifier</Button>\r\n          <Button onClick={() => this.props.deleteRecipe()} class=\"uk-margin\">SUPPRIMER</Button>\r\n        </CardFooter>\r\n      </Card>\r\n      );\r\n  }\r\n}","import React from 'react';\r\n\r\nexport  class Checkbox extends React.Component {\r\n  render() {\r\n    return (\r\n      <input\r\n        id={this.props.id}\r\n        placeholder={this.props.placeholder ? this.props.placeholder : null}\r\n        style={this.props.style ? this.props.style : null}\r\n        classNames=\"uk-checkbox\"\r\n        type=\"checkbox\"\r\n        checked={this.props.checked}\r\n        name={this.props.name ? this.props.name : null}\r\n        value={this.props.value}\r\n        onChange={this.props.onChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Button, Card, CardBody, CardHeader, CardTitle, Form, FormLabel, Input, Textarea } from 'uikit-react';\r\nimport {Checkbox} from './CheckBox'\r\n\r\nexport default class RecipeForm extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    let editedRecipe = this.props.editedRecipe;\r\n\r\n    this.state = {\r\n      id: editedRecipe ? editedRecipe.id : '',\r\n      title: editedRecipe ? editedRecipe.title : '',\r\n      informations: editedRecipe ? editedRecipe.informations ?? '' : '',\r\n      link: editedRecipe ? editedRecipe.link ?? '' : '',\r\n      ingredients: editedRecipe ? editedRecipe.ingredients ?? '' : '',\r\n      dinner: editedRecipe ? (editedRecipe.dinner ?  true : false) : false,\r\n      noon: editedRecipe ? (editedRecipe.noon ? true : false) : false\r\n    }\r\n\r\n  }\r\n  handleChange = (event) => {\r\n    this.setState({[event.target.name]: event.target.value})\r\n  }\r\n\r\n  handleKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      this.props.onSubmit(this.state);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.props.isOpen === true) {\r\n      return (\r\n        <div class=\"shit-form\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Recette</CardTitle>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Form>\r\n                <input type=\"hidden\" name=\"id\" value={this.state.id}/>\r\n                <FormLabel htmlFor=\"title\">Nom de la recette</FormLabel>\r\n                <Input id=\"title\" name=\"title\" onChange={this.handleChange} value={this.state.title} onKeyPress={this.handleKeyPress}/>\r\n                <FormLabel htmlFor=\"informations\">Informations</FormLabel>\r\n                <Input id=\"informations\" name=\"informations\" onChange={this.handleChange} value={this.state.informations} onKeyPress={this.handleKeyPress}/>\r\n                <FormLabel htmlFor=\"link\">Lien</FormLabel>\r\n                <Input id=\"link\" name=\"link\" onChange={this.handleChange} value={this.state.link} onKeyPress={this.handleKeyPress}/>\r\n                <FormLabel htmlFor=\"ingredients\">Ingredients</FormLabel>\r\n                <Textarea id=\"ingredients\" name=\"ingredients\" onChange={this.handleChange} onKeyPress={this.handleKeyPress}>{this.state.ingredients}</Textarea>\r\n                <FormLabel htmlFor=\"noon\">Noon</FormLabel>\r\n                <Checkbox id=\"noon\" name=\"noon\" value=\"1\" checked={this.state.noon} onChange={this.handleChange}></Checkbox>\r\n                <FormLabel htmlFor=\"dinner\">Dinner</FormLabel>\r\n                <Checkbox id=\"dinner\" name=\"dinner\" value=\"1\" checked={this.state.dinner} onChange={this.handleChange}></Checkbox>\r\n                <Button onClick={() => this.props.onSubmit(this.state)}>Enregistrer</Button>  \r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return '';\r\n  }\r\n}","import React from 'react';\r\nimport Recipe from './Recipe';\r\nimport RecipeForm from './RecipeForm';\r\nimport uuid from 'react-uuid';\r\nimport _ from 'lodash';\r\nimport {\r\n  Container,\r\n  Button,\r\n  Flex\r\n} from 'uikit-react';\r\n\r\nexport default class RecipesList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let recipes = JSON.parse(localStorage.getItem('recipes'));\r\n    if (!recipes) {\r\n      recipes = [];\r\n    }\r\n    this.state = {\r\n        recipes: recipes,\r\n        formOpen: false,\r\n        formKey: uuid(),\r\n        editedRecipe: undefined,\r\n        randomShit: undefined,\r\n    };\r\n  }\r\n\r\n  submitRecipe = (recipe) => {\r\n    this.setState({formOpen: false, editedRecipe: null})\r\n    if (!recipe.id) {\r\n      recipe.id = uuid();\r\n      let recipes = this.state.recipes;\r\n      recipes.push(recipe);\r\n      this.setState({recipes: recipes}, this.saveStateToLocalStorage)\r\n      \r\n      return;\r\n    }\r\n\r\n    let editedIndex = 0;\r\n    this.state.recipes.find((r, index) => {\r\n        editedIndex = index;\r\n        return r.id === recipe.id\r\n    })\r\n\r\n    \r\n    let recipes = this.state.recipes;\r\n    recipes[editedIndex] = recipe;\r\n    this.setState({recipes: recipes}, this.saveStateToLocalStorage)\r\n  }\r\n\r\n  openForm = () => {\r\n    this.setState({formOpen: true, formKey: uuid()});\r\n  }\r\n\r\n  editRecipe = (recipe) => {\r\n    this.setState({formOpen: true, formKey: uuid(), editedRecipe: recipe})\r\n  }\r\n\r\n  saveStateToLocalStorage = () => {\r\n    localStorage.setItem('recipes', JSON.stringify(this.state.recipes))\r\n  }\r\n\r\n  deleteRecipe = (recipe) => {\r\n    let editedIndex;\r\n    this.state.recipes.find((r, index) => {\r\n        editedIndex = index;\r\n        return r.id === recipe.id\r\n    })\r\n\r\n    \r\n    let recipes = this.state.recipes;\r\n    recipes.splice(editedIndex, 1);\r\n    this.setState({recipes: recipes}, this.saveStateToLocalStorage)\r\n  }\r\n\r\n  highlightRandomShit = (type) => {\r\n    let typeRecipes = _.filter(this.state.recipes, {[type]: \"1\"})\r\n\r\n    if (typeRecipes.length) {\r\n      let randomShit = _.sample(typeRecipes);\r\n\r\n      this.setState({randomShit: randomShit})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container size=\"expand\" background=\"muted\">\r\n        <div class=\"yep\">\r\n          <Flex alignment=\"center\">\r\n            <Button onClick={() => this.highlightRandomShit('noon')}>RANDOM NOON</Button>\r\n            <Button onClick={() => this.highlightRandomShit('dinner')}>RANDOM DINNER</Button>\r\n            <Button onClick={() => this.openForm()}>Ajouter une recette</Button>\r\n          </Flex>\r\n          <Flex alignment=\"center\">\r\n            {this.state.randomShit &&\r\n              <div class=\"random-shit\">\r\n                <Recipe recipe={this.state.randomShit} editRecipe={() => this.editRecipe(this.state.randomShit)} deleteRecipe={() => this.deleteRecipe(this.state.randomShit)} />\r\n              </div>\r\n            }\r\n            <RecipeForm close={() => this.setState({formOpen: false})} key={this.state.formKey} isOpen={this.state.formOpen} editedRecipe={this.state.editedRecipe} onSubmit={this.submitRecipe}/>\r\n          </Flex>\r\n        \r\n          <div class=\"recipes\">\r\n            <Flex wrap=\"wrap\">\r\n              {this.state.recipes.map((recipe, i) => {\r\n                return (<Recipe recipe={recipe} key={i} highlightedShit={this.state.highlightedShit} editRecipe={() => this.editRecipe(recipe)} deleteRecipe={() => this.deleteRecipe(recipe)} />)\r\n              })}\r\n            </Flex>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport RecipesList from './RecipesList';\r\nimport 'uikit-react/src/stories/import.scss';\r\nimport './index.css';\r\nimport { Section } from 'uikit-react';\r\n\r\nReactDOM.render(\r\n    <Section position=\"relative\">\r\n        <RecipesList />\r\n    </Section>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}