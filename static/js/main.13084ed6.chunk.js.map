{"version":3,"sources":["Recipe.js","RecipeForm.js","RecipesList.js","index.js"],"names":["Recipe","console","log","this","props","recipe","ingredients","body","link","informations","class","title","dangerouslySetInnerHTML","__html","onClick","editRecipe","deleteRecipe","React","Component","RecipeForm","handleChange","event","setState","target","name","value","handleKeyPress","key","onSubmit","state","editedRecipe","id","isOpen","type","htmlFor","onChange","onKeyPress","RecipesList","submitRecipe","formOpen","uuid","recipes","push","saveStateToLocalStorage","editedIndex","find","r","index","openForm","formKey","localStorage","setItem","JSON","stringify","splice","highlightRandomShit","randomShit","_","sample","parse","getItem","undefined","size","background","alignment","close","wrap","map","i","highlightedShit","ReactDOM","render","position","document","getElementById"],"mappings":"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","file":"static/js/main.13084ed6.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Button, Card, CardBody, CardFooter, CardHeader, CardTitle, Margin} from 'uikit-react'\r\n\r\nexport default class Recipe extends React.Component {\r\n  render() {\r\n    console.log(this.props.recipe.ingredients)\r\n    let body = '<div class=\"display-linebreak\">' + this.props.recipe.ingredients + '</div>'\r\n    if (this.props.recipe.link) {\r\n      body += '<a href=\"' + this.props.recipe.link + '\" target=\"_blank\">Link</a>';\r\n    }\r\n    body += '<div>' + this.props.recipe.informations + '</div>';\r\n    return (\r\n      <Card class=\"recipe\">\r\n        <CardHeader>\r\n          <CardTitle>{this.props.recipe.title}</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div dangerouslySetInnerHTML={{__html: body}}>\r\n\r\n          </div>\r\n        </CardBody>\r\n        <CardFooter>\r\n          <Button onClick={() => this.props.editRecipe()} class=\"uk-margin\">Modifier</Button>\r\n          <Button onClick={() => this.props.deleteRecipe()} class=\"uk-margin\">SUPPRIMER</Button>\r\n        </CardFooter>\r\n      </Card>\r\n      );\r\n  }\r\n}","import React from 'react';\r\nimport { Button, Card, CardBody, CardHeader, CardTitle, Form, FormLabel, Input, Textarea } from 'uikit-react';\r\n\r\nexport default class RecipeForm extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    let editedRecipe = this.props.editedRecipe;\r\n\r\n    this.state = {\r\n      id: editedRecipe ? editedRecipe.id : '',\r\n      title: editedRecipe ? editedRecipe.title : '',\r\n      informations: editedRecipe ? editedRecipe.informations ?? '' : '',\r\n      link: editedRecipe ? editedRecipe.link ?? '' : '',\r\n      ingredients: editedRecipe ? editedRecipe.ingredients ?? '' : '',\r\n    }\r\n\r\n  }\r\n  handleChange = (event) => {\r\n    this.setState({[event.target.name]: event.target.value})\r\n  }\r\n\r\n  handleKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      this.props.onSubmit(this.state);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.props.isOpen === true) {\r\n      return (\r\n        <div class=\"shit-form\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Recette</CardTitle>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Form>\r\n                <input type=\"hidden\" name=\"id\" value={this.state.id}/>\r\n                <FormLabel htmlFor=\"title\">Nom de la recette</FormLabel>\r\n                <Input id=\"title\" name=\"title\" onChange={this.handleChange} value={this.state.title} onKeyPress={this.handleKeyPress}/>\r\n                <FormLabel htmlFor=\"informations\">Informations</FormLabel>\r\n                <Input id=\"informations\" name=\"informations\" onChange={this.handleChange} value={this.state.informations} onKeyPress={this.handleKeyPress}/>\r\n                <FormLabel htmlFor=\"link\">Lien</FormLabel>\r\n                <Input id=\"link\" name=\"link\" onChange={this.handleChange} value={this.state.link} onKeyPress={this.handleKeyPress}/>\r\n                <FormLabel htmlFor=\"ingredients\">Ingredients</FormLabel>\r\n                <Textarea id=\"ingredients\" name=\"ingredients\" onChange={this.handleChange} onKeyPress={this.handleKeyPress}>{this.state.ingredients}</Textarea>\r\n                <Button onClick={() => this.props.onSubmit(this.state)}>Enregistrer</Button>  \r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return '';\r\n  }\r\n}","import React from 'react';\r\nimport Recipe from './Recipe';\r\nimport RecipeForm from './RecipeForm';\r\nimport uuid from 'react-uuid';\r\nimport _ from 'lodash';\r\nimport {\r\n  Container,\r\n  Button,\r\n  Flex,\r\n  Margin\r\n} from 'uikit-react';\r\n\r\nexport default class RecipesList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let recipes = JSON.parse(localStorage.getItem('recipes'));\r\n    if (!recipes) {\r\n      recipes = [];\r\n    }\r\n    this.state = {\r\n        recipes: recipes,\r\n        formOpen: false,\r\n        formKey: uuid(),\r\n        editedRecipe: undefined,\r\n        randomShit: undefined,\r\n    };\r\n  }\r\n\r\n  submitRecipe = (recipe) => {\r\n    this.setState({formOpen: false, editedRecipe: null})\r\n    if (!recipe.id) {\r\n      recipe.id = uuid();\r\n      let recipes = this.state.recipes;\r\n      recipes.push(recipe);\r\n      this.setState({recipes: recipes}, this.saveStateToLocalStorage)\r\n      \r\n      return;\r\n    }\r\n\r\n    let editedIndex = 0;\r\n    this.state.recipes.find((r, index) => {\r\n        editedIndex = index;\r\n        return r.id === recipe.id\r\n    })\r\n\r\n    \r\n    let recipes = this.state.recipes;\r\n    recipes[editedIndex] = recipe;\r\n    this.setState({recipes: recipes}, this.saveStateToLocalStorage)\r\n  }\r\n\r\n  openForm = () => {\r\n    this.setState({formOpen: true, formKey: uuid()});\r\n  }\r\n\r\n  editRecipe = (recipe) => {\r\n    this.setState({formOpen: true, formKey: uuid(), editedRecipe: recipe})\r\n  }\r\n\r\n  saveStateToLocalStorage = () => {\r\n    localStorage.setItem('recipes', JSON.stringify(this.state.recipes))\r\n  }\r\n\r\n  deleteRecipe = (recipe) => {\r\n    let editedIndex;\r\n    this.state.recipes.find((r, index) => {\r\n        editedIndex = index;\r\n        return r.id === recipe.id\r\n    })\r\n\r\n    \r\n    let recipes = this.state.recipes;\r\n    recipes.splice(editedIndex, 1);\r\n    this.setState({recipes: recipes}, this.saveStateToLocalStorage)\r\n  }\r\n\r\n  highlightRandomShit = () => {\r\n    let randomShit = _.sample(this.state.recipes);\r\n\r\n    this.setState({randomShit: randomShit})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container size=\"expand\" background=\"muted\">\r\n        <div class=\"yep\">\r\n          <Flex alignment=\"center\">\r\n            <Button onClick={this.highlightRandomShit}>RANDOM SHIT</Button>\r\n            <Button onClick={() => this.openForm()}>Ajouter une recette</Button>\r\n          </Flex>\r\n          <Flex alignment=\"center\">\r\n            {this.state.randomShit &&\r\n              <div class=\"random-shit\">\r\n                <Recipe recipe={this.state.randomShit} editRecipe={() => this.editRecipe(this.state.randomShit)} deleteRecipe={() => this.deleteRecipe(this.state.randomShit)} />\r\n              </div>\r\n            }\r\n            <RecipeForm close={() => this.setState({formOpen: false})} key={this.state.formKey} isOpen={this.state.formOpen} editedRecipe={this.state.editedRecipe} onSubmit={this.submitRecipe}/>\r\n          </Flex>\r\n        \r\n          <div class=\"recipes\">\r\n            <Flex wrap=\"wrap\">\r\n              {this.state.recipes.map((recipe, i) => {\r\n                return (<Recipe recipe={recipe} key={i} highlightedShit={this.state.highlightedShit} editRecipe={() => this.editRecipe(recipe)} deleteRecipe={() => this.deleteRecipe(recipe)} />)\r\n              })}\r\n            </Flex>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport RecipesList from './RecipesList';\nimport 'uikit-react/src/stories/import.scss';\nimport './index.css';\nimport { Section } from 'uikit-react';\n\nReactDOM.render(\n    <Section position=\"relative\">\n        <RecipesList />\n    </Section>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}